"use strict";var __importStar=this&&this.__importStar||function(a){if(a&&a.__esModule)return a;var b={};if(null!=a)for(var c in a)Object.hasOwnProperty.call(a,c)&&(b[c]=a[c]);return b["default"]=a,b};Object.defineProperty(exports,"__esModule",{value:!0});const fs_1=require("fs"),path_1=require("path"),LANG_DICT=new Map([["pcss","css"],["postcss","css"],["sass","scss"],["styl","stylus"],["js","javascript"],["coffee","coffeescript"],["ts","typescript"]]),throwError=a=>{throw new Error(`[svelte-preprocess] ${a}`)};exports.concat=(...a)=>a.reduce((b,c)=>c?b.concat(c):b,[]),exports.throwUnsupportedError=(a,b)=>throwError(`Unsupported script language '${a}' in file '${b}'`),exports.isFn=a=>"function"==typeof a,exports.resolveSrc=(a,b)=>path_1.resolve(path_1.dirname(a),b),exports.getSrcContent=a=>new Promise((b,c)=>{fs_1.readFile(a,(a,d)=>{a?c(a):b(d.toString())})});async function doesFileExist(a){return new Promise(b=>fs_1.access(a,0,a=>b(!a)))}exports.parseFile=async({attributes:a,filename:b,content:c},d)=>{const e=[];if(a.src){if("string"!=typeof a.src)throw new Error("src attribute must be string");let d=a.src;null==d.match(/^(https?:)?\/\//)&&(d=exports.resolveSrc(b,d),(await doesFileExist(d))&&(c=await exports.getSrcContent(d),e.push(d)))}const{lang:f,alias:g}=exports.getLanguage(a,d);return{filename:b,attributes:a,content:c,lang:f,alias:g,dependencies:e}},exports.addLanguageAlias=a=>a.forEach(a=>LANG_DICT.set(...a)),exports.getIncludePaths=(a,b=[])=>[...new Set([...b,"node_modules",process.cwd(),path_1.dirname(a)])],exports.getLanguage=(a,b)=>{let c=b;if(a.lang){if("string"!=typeof a.lang)throw new Error("lang attribute must be string");c=a.lang}else if(a.type){if("string"!=typeof a.type)throw new Error("type attribute must be string");c=a.type.replace(/^(text|application)\/(.*)$/,"$2")}else if(a.src){if("string"!=typeof a.src)throw new Error("src attribute must be string");const d=path_1.basename(a.src).split(".");c=1<d.length?d.pop():b}return{lang:LANG_DICT.get(c)||c,alias:c}};const TRANSFORMERS={};exports.runTransformer=async(a,b,{content:c,map:d,filename:e})=>{if("function"==typeof b)return b({content:c,map:d,filename:e});try{return TRANSFORMERS[a]||(await Promise.resolve().then(()=>__importStar(require(`./transformers/${a}`))).then(b=>{TRANSFORMERS[a]=b.default})),TRANSFORMERS[a]({content:c,filename:e,map:d,options:"boolean"==typeof b?null:b})}catch(b){throwError(`Error transforming '${a}'.\n\nMessage:\n${b.message}\n\nStack:\n${b.stack}`)}},exports.importAny=async(...a)=>{try{const b=await a.reduce((a,b)=>a.catch(()=>Promise.resolve().then(()=>__importStar(require(b)))),Promise.reject());return b}catch(b){throw new Error(`Cannot find any of modules: ${a}`)}};