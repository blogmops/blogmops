---
name: build

on:
  pull_request:
    paths-ignore:
      - "**.md"
  push:
    paths-ignore:
      - "**.md"

jobs:
  build:
    runs-on: ${{ matrix.os }}
    continue-on-error: false # prevents a workflow run from failing when a job fails
    timeout-minutes: 12

    strategy:
      fail-fast: true # github will cancel all in-progress jobs if any matrix job fails
      matrix:
        os: [ubuntu-20.04, macos-latest, windows-latest]

    steps:
      - uses: actions/checkout@v2.3.2
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Get npm cache directory
        id: npm-cache
        run: echo "::set-output name=dir::$(npm config get cache)"

      - uses: actions/cache@v2.1.0
        with:
          path: ${{ steps.npm-cache.outputs.dir }}
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Checkout nodeJS
        uses: actions/setup-node@v2.1.1
        with:
          node-version: 14

      - name: Install dependencies
        run: npm i

      - name: Cache Cypress binary
        uses: actions/cache@v2.1.0
        with:
          path: ~/.cache/Cypress
          key: cypress-${{ runner.os }}-cypress-${{ hashFiles('**/package.json') }}
          restore-keys: |
            cypress-${{ runner.os }}-cypress-

      - name: Export
        run: npm run export

      # killall -9 node (or) pkill node
      # ps aux | grep -i node | awk '{print $2}' | xargs  kill -9)
      - name: Start
        run: npm run static & (sleep 14 && killall -9 node)
        env:
          PORT: 5000
          NODE_ENV: production
        if: runner.os != 'windows' # for win: cmd "/C TASKKILL /IM node.exe /F"
