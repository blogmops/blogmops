name: Cypress parallel tests
on: pull_request
jobs:
  install:
    name: Install NPM and Cypress
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        node: [12, 14]

    steps:
      - uses: actions/checkout@v2.3.1

      - name: Use Node.js ${{ matrix.node }}
        uses: actions/setup-node@v2.1.1
        with:
          node-version: ${{ matrix.node }}

      - name: Print CI env variables
        run: |
          npm i -g @bahmutov/print-env@v2.1.2
          print-env GITHUB BUILD ACTIONS || true

      - name: Cache central NPM modules
        uses: actions/cache@v2.1.0
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ github.ref }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: ${{ runner.os }}-node-${{ github.ref }}-${{ hashFiles('**/package-lock.json') }}

      - name: Cache Cypress binary
        uses: actions/cache@v2.1.0
        with:
          path: ~/.cache/Cypress
          key: cypress-${{ runner.os }}-cypress-${{ github.ref }}-${{ hashFiles('**/package.json') }}
          restore-keys: cypress-${{ runner.os }}-cypress-${{ github.ref }}-${{ hashFiles('**/package.json') }}

      - name: Cache local node_modules
        uses: actions/cache@v2.1.0
        with:
          path: node_modules
          key: ${{ runner.os }}-node-modules-${{ github.ref }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: ${{ runner.os }}-node-modules-${{ github.ref }}-

      - name: install dependencies and verify Cypress
        env:
          CI: true
          PORT: 3000
          NODE_ENV: production
          CYPRESS_PROJECT_ID: ${{ secrets.CYPRESS_PROJECT_ID }}
          CYPRESS_RECORD_KEY: ${{ secrets.CYPRESS_RECORD_KEY }}
          TERM: xterm
        run: |
          npm ci
          npx cypress cache path
          npx cypress cache list
          npx cypress verify
          npx cypress info

  test1:
    name: Cypress test 1
    runs-on: ${{ matrix.os }}
    needs: install
    steps:
      - uses: actions/checkout@v2.3.1

      - name: Use Node.js ${{ matrix.node }}
        uses: actions/setup-node@v2.1.1
        with:
          node-version: ${{ matrix.node }}

      - name: Cache Cypress binary
        uses: actions/cache@v2.1.0
        with:
          path: ~/.cache/Cypress
          key: cypress-${{ runner.os }}-cypress-${{ github.ref }}-${{ hashFiles('**/package.json') }}
          restore-keys: cypress-${{ runner.os }}-cypress-${{ github.ref }}-${{ hashFiles('**/package.json') }}

      - name: Cache local node_modules
        uses: actions/cache@v2.1.0
        with:
          path: node_modules
          key: ${{ runner.os }}-node-modules-${{ github.ref }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: ${{ runner.os }}-node-modules-${{ github.ref }}-

      - name: Check binary
        run: |
          npx cypress cache path
          npx cypress cache list

      - name: Cypress tests
        run: |
          npm run build
          npm run start &
          npx cypress run --record --parallel --group "Parallel 2x"
        env:
          CI: true
          PORT: 3000
          NODE_ENV: production
          CYPRESS_PROJECT_ID: ${{ secrets.CYPRESS_PROJECT_ID }}
          CYPRESS_RECORD_KEY: ${{ secrets.CYPRESS_RECORD_KEY }}
          TERM: xterm

      - uses: actions/upload-artifact@master
        if: failure()
        with:
          name: screenshots
          path: cypress/screenshots

      - uses: actions/upload-artifact@master
        with:
          name: videos
          path: cypress/videos

  test2:
    name: Cypress test 2
    runs-on: ${{ matrix.os }}
    needs: install
    steps:
      - uses: actions/checkout@v2.3.1

      - name: Use Node.js ${{ matrix.node }}
        uses: actions/setup-node@v2.1.1
        with:
          node-version: ${{ matrix.node }}

      - name: Cache Cypress binary
        uses: actions/cache@v2.1.0
        with:
          path: ~/.cache/Cypress
          key: cypress-${{ runner.os }}-cypress-${{ github.ref }}-${{ hashFiles('**/package.json') }}
          restore-keys: cypress-${{ runner.os }}-cypress-${{ github.ref }}-

      - name: Cache local node_modules
        uses: actions/cache@v2.1.0
        with:
          path: node_modules
          key: ${{ runner.os }}-node-modules-${{ github.ref }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: ${{ runner.os }}-node-modules-

      - name: Check binary
        run: |
          npx cypress cache path
          npx cypress cache list

      - name: Cypress tests
        run: |
          npm run build && npm run start &
          npx cypress run --record --parallel --group "Parallel 2x"
        env:
          CI: true
          PORT: 3000
          NODE_ENV: production
          CYPRESS_PROJECT_ID: ${{ secrets.CYPRESS_PROJECT_ID }}
          CYPRESS_RECORD_KEY: ${{ secrets.CYPRESS_RECORD_KEY }}
          TERM: xterm

      - uses: actions/upload-artifact@master
        if: failure()
        with:
          name: screenshots
          path: cypress/screenshots

      - uses: actions/upload-artifact@master
        with:
          name: videos
          path: cypress/videos
