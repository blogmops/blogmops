import { S as SvelteComponentDev, i as init, s as safe_not_equal, a as space, e as element, t as text, d as claim_text, c as claim_element, b as children, f as detach, g as add_location, j as insert, k as append, q as set_data, n as noop } from './internal.0efbe437.js';

/*!
 * reading-time
 * Copyright (c) Nicolas Gryman <ngryman@gmail.com>
 * MIT Licensed
 */

function ansiWordBound(c) {
  return (
    (' ' === c) ||
    ('\n' === c) ||
    ('\r' === c) ||
    ('\t' === c)
  )
}

function readingTime(text, options) {
  var words = 0, start = 0, end = text.length - 1, wordBound, i;

  options = options || {};

  // use default values if necessary
  options.wordsPerMinute = options.wordsPerMinute || 200;

  // use provided function if available
  wordBound = options.wordBound || ansiWordBound;

  // fetch bounds
  while (wordBound(text[start])) start++;
  while (wordBound(text[end])) end--;

  // calculate the number of words
  for (i = start; i <= end;) {
    for (; i <= end && !wordBound(text[i]); i++) ;
    words++;
    for (; i <= end && wordBound(text[i]); i++) ;
  }

  // reading time stats
  var minutes = words / options.wordsPerMinute;
  var time = minutes * 60 * 1000;
  var displayed = Math.ceil(minutes.toFixed(2));

  return {
    text: displayed + ' min read',
    minutes: minutes,
    time: time,
    words: words
  }
}

/**
 * Export
 */
var readingTime_1 = readingTime;

var readingTime$1 = readingTime_1;

/* src\routes\blog\[slug].svelte generated by Svelte v3.0.0 */

const file = "src\\routes\\blog\\[slug].svelte";

function create_fragment(ctx) {
	var title_value, t0, div1, h1, t1_value = ctx.post.frontmatter.title, t1, t2, p, t3_value = new Date(ctx.post.frontmatter.date).toDateString(), t3, t4, t5, t6, img, img_src_value, img_alt_value, t7, div0, raw_value = ctx.post.contentHtml;

	document.title = title_value = ctx.post.frontmatter.title;

	return {
		c: function create() {
			t0 = space();
			div1 = element("div");
			h1 = element("h1");
			t1 = text(t1_value);
			t2 = space();
			p = element("p");
			t3 = text(t3_value);
			t4 = text(" ﹒ ");
			t5 = text(ctx.readingTime);
			t6 = space();
			img = element("img");
			t7 = space();
			div0 = element("div");
			this.h();
		},

		l: function claim(nodes) {
			t0 = claim_text(nodes, "\n\n");

			div1 = claim_element(nodes, "DIV", { class: true }, false);
			var div1_nodes = children(div1);

			h1 = claim_element(div1_nodes, "H1", { class: true }, false);
			var h1_nodes = children(h1);

			t1 = claim_text(h1_nodes, t1_value);
			h1_nodes.forEach(detach);
			t2 = claim_text(div1_nodes, "\n  ");

			p = claim_element(div1_nodes, "P", { class: true }, false);
			var p_nodes = children(p);

			t3 = claim_text(p_nodes, t3_value);
			t4 = claim_text(p_nodes, " ﹒ ");
			t5 = claim_text(p_nodes, ctx.readingTime);
			p_nodes.forEach(detach);
			t6 = claim_text(div1_nodes, "\n  ");

			img = claim_element(div1_nodes, "IMG", { src: true, alt: true, class: true }, false);
			var img_nodes = children(img);

			img_nodes.forEach(detach);
			t7 = claim_text(div1_nodes, "\n\n  ");

			div0 = claim_element(div1_nodes, "DIV", { class: true }, false);
			var div0_nodes = children(div0);

			div0_nodes.forEach(detach);
			div1_nodes.forEach(detach);
			this.h();
		},

		h: function hydrate() {
			h1.className = "svelte-35w4os";
			add_location(h1, file, 83, 2, 1743);
			p.className = "post-meta svelte-35w4os";
			add_location(p, file, 84, 2, 1779);
			img.src = img_src_value = ctx.post.frontmatter.preview;
			img.alt = img_alt_value = ctx.post.frontmatter.title;
			img.className = "svelte-35w4os";
			add_location(img, file, 87, 2, 1879);
			div0.className = "content svelte-35w4os";
			add_location(div0, file, 89, 2, 1950);
			div1.className = "container svelte-35w4os";
			add_location(div1, file, 82, 0, 1717);
		},

		m: function mount(target, anchor) {
			insert(target, t0, anchor);
			insert(target, div1, anchor);
			append(div1, h1);
			append(h1, t1);
			append(div1, t2);
			append(div1, p);
			append(p, t3);
			append(p, t4);
			append(p, t5);
			append(div1, t6);
			append(div1, img);
			append(div1, t7);
			append(div1, div0);
			div0.innerHTML = raw_value;
		},

		p: function update(changed, ctx) {
			if ((changed.post) && title_value !== (title_value = ctx.post.frontmatter.title)) {
				document.title = title_value;
			}

			if ((changed.post) && t1_value !== (t1_value = ctx.post.frontmatter.title)) {
				set_data(t1, t1_value);
			}

			if ((changed.post) && t3_value !== (t3_value = new Date(ctx.post.frontmatter.date).toDateString())) {
				set_data(t3, t3_value);
			}

			if (changed.readingTime) {
				set_data(t5, ctx.readingTime);
			}

			if ((changed.post) && img_src_value !== (img_src_value = ctx.post.frontmatter.preview)) {
				img.src = img_src_value;
			}

			if ((changed.post) && img_alt_value !== (img_alt_value = ctx.post.frontmatter.title)) {
				img.alt = img_alt_value;
			}

			if ((changed.post) && raw_value !== (raw_value = ctx.post.contentHtml)) {
				div0.innerHTML = raw_value;
			}
		},

		i: noop,
		o: noop,

		d: function destroy(detaching) {
			if (detaching) {
				detach(t0);
				detach(div1);
			}
		}
	};
}

async function preload({ params, query }) {
  const res = await this.fetch(`blog/${params.slug}.json`);
  const data = await res.json();

  if (res.status === 200) {
    return { post: data };
  } else {
    this.error(res.status, data.message);
  }
}

function instance($$self, $$props, $$invalidate) {
	let { post } = $$props;

	$$self.$set = $$props => {
		if ('post' in $$props) $$invalidate('post', post = $$props.post);
	};

	let readingTimeData, readingTime;
	$$self.$$.update = ($$dirty = { post: 1, readingTimeData: 1 }) => {
		if ($$dirty.post) { $$invalidate('readingTimeData', readingTimeData = readingTime$1(post.contentHtml)); }
		if ($$dirty.readingTimeData) { $$invalidate('readingTime', readingTime = `${Math.ceil(readingTimeData.minutes)} minute${
        Math.ceil(readingTimeData.minutes) > 1 ? '(s)' : ''
      } read`); }
	};

	return { post, readingTime };
}

class Slug extends SvelteComponentDev {
	constructor(options) {
		super(options);
		init(this, options, instance, create_fragment, safe_not_equal, ["post"]);

		const { ctx } = this.$$;
		const props = options.props || {};
		if (ctx.post === undefined && !('post' in props)) {
			console.warn("<Slug> was created without expected prop 'post'");
		}
	}

	get post() {
		throw new Error("<Slug>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set post(value) {
		throw new Error("<Slug>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}
}

export default Slug;
export { preload };
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
